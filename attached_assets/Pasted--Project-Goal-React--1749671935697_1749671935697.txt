## 프로젝트 목표 (Project Goal)

React로 구현된 '고객 기본 정보' 폼의 두 가지 버그를 수정하고 누락된 기능을 추가합니다.

입력 필드 오류 수정: '전화번호'와 '이메일' 입력 필드가 정상적으로 동작하도록 수정합니다.
다국어 기능 적용: UI에 노출된 번역 키(예: customer.phone)를 useTranslation 훅을 사용하여 실제 언어 텍스트로 표시합니다.
## 제약 조건 (Constraints)

기존에 구현된 로직, 컴포넌트 구조, 상태 관리 방식, CSS 스타일 등은 절대 변경하지 않습니다.
오직 버그 수정과 기능 추가에만 집중합니다.
## 문제 진단 (Problem Diagnosis)

입력 필드 오작동: '전화번호', '이메일' 입력 필드에 value와 onChange 속성이 올바르게 연결되지 않은 것으로 보입니다. 이는 React의 제어 컴포넌트(Controlled Component)에서 흔히 발생하는 문제입니다.
번역 미적용: useTranslation 훅에서 제공하는 t() 함수가 폼의 라벨, 플레이스홀더 등에 적용되지 않아 번역 키가 그대로 노출되고 있습니다.
## 해결 방안 및 구현 가이드 (Solution & Implementation Guide)

1. 입력 필드 오류 수정 (전화번호, 이메일)
가정: companyName 필드가 정상 동작하므로, 폼 데이터를 관리하는 useState 객체(예: formData)와 onChange 핸들러 함수(예: handleInputChange)가 이미 존재한다고 가정합니다.

지시: '전화번호'와 '이메일' input 요소에 아래와 같이 name, value, onChange 속성을 추가 및 바인딩합니다.

전화번호 필드 수정 예시:

수정 전: <input type="text" placeholder="customer.phone" />
수정 후:
JavaScript

<input
  type="text"
  name="customerPhone" // 1. state 객체의 키와 일치하는 name
  value={formData.customerPhone} // 2. state 값 바인딩
  onChange={handleInputChange} // 3. 기존 핸들러 연결
  placeholder={t('customer.phone')} // 4. (번역 기능 추가)
/>
이메일 필드 수정 예시:

수정 전: <input type="text" placeholder="customer.email" />
수정 후:
JavaScript

<input
  type="text"
  name="customerEmail" // 1. state 객체의 키와 일치하는 name
  value={formData.customerEmail} // 2. state 값 바인딩
  onChange={handleInputChange} // 3. 기존 핸들러 연결
  placeholder={t('customer.email')} // 4. (번역 기능 추가)
/>
2. 다국어 기능 적용
지시: 컴포넌트 상단에 const { t } = useTranslation();이 선언되어 있는지 확인하고, 아래 예시를 참고하여 UI에 보이는 모든 번역 키를 t() 함수로 감싸줍니다.

섹션 제목:

수정 전: company.info.basic
수정 후: {t('company.info.basic')}
폼 라벨:

수정 전: 전화번호 또는 customer.phone
수정 후: {t('customer.phone')}
드롭다운(Select) 내부 텍스트:

수정 전: company.type.startup 또는 address.selectProvince
수정 후: {t('company.type.startup')}, {t('address.selectProvince')}
적용 대상: company.info.description, company.name, customer.email, 업종, company.type, customer.grade, address.title, address.selectDistrict, address.selectWard, address.detailAddress 등 보이는 모든 키에 적용합니다.

## 최종 요청 (Final Request)

위에 명시된 가이드와 제약 조건을 엄격히 준수하여, '고객 기본 정보' 폼의 입력 필드 오류를 수정하고 다국어 기능을 완벽하게 적용해 주세요.






