# ───────────────────────────────────────────
# 1) Build Stage: 클라이언트(Next.js) + 서버 코드 빌드
# ───────────────────────────────────────────
FROM node:16-alpine AS builder
WORKDIR /app

# (1) 클라이언트 종속성 설치 및 빌드
COPY client-nextjs/package.json client-nextjs/package-lock.json ./client-nextjs/
WORKDIR /app/client-nextjs
RUN npm ci
COPY client-nextjs/ ./
RUN npm run build

# (2) 서버 종속성 설치
WORKDIR /app
COPY server/package.json server/package-lock.json ./server/
WORKDIR /app/server
RUN npm ci
COPY server/ ./
# (필요하다면) RUN npm run build  (TypeScript/Babel 등 사용 시)

# ───────────────────────────────────────────
# 2) Production Stage: 런타임용 이미지를 생성
# ───────────────────────────────────────────
FROM node:16-alpine AS runner
WORKDIR /app

# (1) 클라이언트 정적 파일 복제
COPY --from=builder /app/client-nextjs/.next ./client/.next
COPY --from=builder /app/client-nextjs/public ./client/public

# (2) 서버 의존성 및 소스 복제
COPY --from=builder /app/server/node_modules ./server/node_modules
COPY --from=builder /app/server ./

# (3) 포트 노출 (예: 서버가 4000 포트를 사용해 클라이언트를 서빙한다면 4000으로)
EXPOSE 3000

# (4) 서버 진입 및 실행
WORKDIR /app/server
CMD ["node", "index.js"]
