const models = require("./models");
const bcrypt = require("bcryptjs");

async function testDatabase() {
  try {
    console.log("üîç Testing database connection...");

    // Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ Ïó∞Í≤∞ ÌÖåÏä§Ìä∏
    await models.sequelize.authenticate();
    console.log("‚úÖ Database connection successful");

    // users ÌÖåÏù¥Î∏î Ïä§ÌÇ§Îßà ÌôïÏù∏
    console.log("\nüìã Checking users table schema...");
    const usersSchema = await models.sequelize.query("PRAGMA table_info(users);", { type: models.sequelize.QueryTypes.SELECT });

    console.log("Users table columns:");
    usersSchema.forEach((col) => {
      console.log(`- ${col.name}: ${col.type} (nullable: ${col.notnull === 0})`);
    });

    // Í∏∞Ï°¥ ÏÇ¨Ïö©Ïûê ÌôïÏù∏
    const userCount = await models.User.count();
    console.log(`\nüë• Existing users: ${userCount}`);

    if (userCount === 0) {
      console.log("\nüÜï Creating test user...");

      // ÌÖåÏä§Ìä∏ ÏÇ¨Ïö©Ïûê ÏÉùÏÑ±
      const hashedPassword = await bcrypt.hash("testpassword123", 12);

      const testUser = await models.User.create({
        email: "test@example.com",
        password: hashedPassword,
        name: "Test User",
        role: "editor",
        department: "Test Department",
      });

      console.log(`‚úÖ Test user created with ID: ${testUser.id}`);
    } // ÏÇ¨Ïö©Ïûê Î™©Î°ù ÌôïÏù∏
    const users = await models.User.findAll({
      attributes: ["id", "email", "name", "role"],
      limit: 5,
    });

    console.log("\nüìù Users in database:");
    users.forEach((user) => {
      console.log(`- ID: ${user.id}, Email: ${user.email}, Role: ${user.role}`);
    });

    await models.sequelize.close();
    console.log("\n‚úÖ Database test completed");
  } catch (error) {
    console.error("‚ùå Database test failed:", error.message);
    console.error("Full error:", error);
    process.exit(1);
  }
}

testDatabase();
